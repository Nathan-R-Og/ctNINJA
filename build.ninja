python = /usr/bin/python3
rule ld
  command = mips-linux-gnu-ld -T ver/$version/build/undefined_syms.txt -T ver/$version/undefined_syms_auto.txt -T ver/$version/undefined_funcs_auto.txt -Map $mapfile --no-check-sections -T $in -o $out
  description = link($version) $out
rule z64
  command = mips-linux-gnu-objcopy  $in $out -O binary && tools/build/rom/n64crc $out
  description = rom $out
rule sha1sum
  command = sha1sum -c $in && touch $out
  description = check $in
rule cpp
  command = cpp $in  -P -o $out
  description = cpp $in
rule cc
  command = bash -o pipefail -c 'cpp -w -I. -Iinclude -Iinclude/PR -Iassets -Isrc -D_LANGUAGE_C -D_FINALROM -DVERSION=$version -DF3DEX_GBI -D_MIPS_SZLONG=32 -nostdinc  $cppflags -MD -MF $out.d $in -o - | iconv --from UTF-8 --to SHIFT-JIS > $out.i && tools/build/cc/ido5.3/cc -c -G0 -O2 -fno-common -B tools/build/cc/gcc/ -Wuninitialized -Wmissing-braces -Wimplicit -Wredundant-decls -Wstrict-prototypes $cflags $out.i -o $out'
  description = gcc $in
  depfile = $out.d
  deps = gcc
rule cc_ido
  command = tools/build/cc/ido5.3/cc -w -I. -Iinclude -Iinclude/PR -Iassets -Isrc -D_LANGUAGE_C -D_FINALROM -DVERSION=$version -DF3DEX_GBI -D_MIPS_SZLONG=32  $cppflags -c -mips1 -O0 -G0 -non_shared -Xfullwarn -Xcpluscomm -o $out $in
  description = ido $in
rule cc_272
  command = bash -o pipefail -c 'COMPILER_PATH=tools/build/cc/gcc2.7.2/ tools/build/cc/gcc2.7.2/gcc -I. -Iinclude -Iinclude/PR -Iassets -Isrc -D_LANGUAGE_C -D_FINALROM -DVERSION=$version -DF3DEX_GBI -D_MIPS_SZLONG=32 -nostdinc  $cppflags -c -G0 -mgp32 -mfp32 -mips3 -Wuninitialized -Wmissing-braces -Wimplicit -Wredundant-decls -Wstrict-prototypes $cflags $in -o $out && mips-linux-gnu-objcopy -N $in $out'
  description = cc_272 $in
rule cxx
  command = bash -o pipefail -c 'cpp -w -I. -Iinclude -Iinclude/PR -Iassets -Isrc -D_LANGUAGE_C -D_FINALROM -DVERSION=$version -DF3DEX_GBI -D_MIPS_SZLONG=32 -nostdinc  $cppflags -MD -MF $out.d $in -o - | iconv --from UTF-8 --to SHIFT-JIS > $out.i && tools/build/cc/gcc/g++ -c -G0 -O2 -fno-common -B tools/build/cc/gcc/ -Wuninitialized -Wmissing-braces -Wimplicit -Wredundant-decls -Wstrict-prototypes $cflags $out.i -o $out'
  description = cxx $in
  depfile = $out.d
  deps = gcc
rule bin
  command = mips-linux-gnu-ld -r -b binary $in -o $out
  description = bin $in
rule as
  command = mips-linux-gnu-as -EB -march=vr4300 -mtune=vr4300 -Iinclude $in -o $out
  description = as $in
rule img
  command = $python tools/build/img/build.py $img_type $in $out $img_flags
  description = img($img_type) $in
rule img_header
  command = $python tools/build/img/header.py $in $out $c_name
  description = img_header $in
rule bin_inc_c
  command = $python tools/build/bin_inc_c.py $in $out $c_name
  description = bin_inc_c $out
rule yay0
  command = tools/build/yay0/Yay0compress $in $out
  description = yay0 $in
rule sprite
  command = $python tools/build/sprites/sprite.py $out $sprite_dir
  description = sprite $sprite_name
rule sprite_combine
  command = $python tools/build/sprites/combine.py $out $in
  description = sprite_combine $in
rule sprite_header
  command = $python tools/build/sprites/header.py $out $sprite_dir $sprite_id
  description = sprite_header $sprite_name
rule msg
  command = $python tools/build/msg/parse_compile.py $in $out
  description = msg $in
rule msg_combine
  command = $python tools/build/msg/combine.py $out $in
  description = msg_combine $out
rule mapfs
  command = $python tools/build/mapfs/combine.py $version $out $in
  description = mapfs $out
rule pack_title_data
  command = $python tools/build/mapfs/pack_title_data.py $out $in
  description = pack_title_data $out
rule map_header
  command = $python tools/build/mapfs/map_header.py $in > $out
rule pm_charset
  command = $python tools/build/pm_charset.py $out $in
rule pm_charset_palettes
  command = $python tools/build/pm_charset_palettes.py $out $in
rule cc_tool
  command = cc -w $in -O3 -o $out
  description = cc_tool $in
build tools/build/yay0/Yay0compress: cc_tool tools/build/yay0/Yay0compress.c
build tools/build/rom/n64crc: cc_tool tools/build/rom/n64crc.c
build build/jp/asm/header.s.o: as asm/header.s
  version = jp
